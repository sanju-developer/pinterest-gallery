{"version":3,"sources":["services/photoGallery.js","components/Modal/index.js","components/PhotoGallery/index.js","App.js","reportWebVitals.js","index.js"],"names":["accessKey","photoGalleryService","a","page","fetch","response","json","Modal","props","list","index","closeModal","useState","currentindex","setCurrentindex","disabledRightArrow","setDisableRightArrow","disabledleftArrow","setDisabledleftArrow","useEffect","length","rightBtnHandler","leftBtnHandler","rowRenderer","key","style","className","disabled","onClick","urls","small","textAlign","src","alt","loadMoreRows","startIndex","stopIndex","id","isRowLoaded","rowCount","onRowsRendered","registerChild","height","ref","rowHeight","width","margin","border","padding","container","PhotoGallery","setList","setPage","isApiLoading","setIsApiLoading","modalOpen","setOpenModal","selectedIndex","setSelectedIndex","listdata","fetchData","dataLength","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","hasMore","loader","map","item","i","ind","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3353539d.chunk.js","sourcesContent":["const accessKey = \"FSm2_IszXiKvD7moLkv1uVVnaHmCW2hQFtHxwP5gtXE\";\n\nexport async function photoGalleryService(page = 1) {\n    // const response = await fetch(`http://jsonplaceholder.typicode.com/photos?_start=${page}&_limit=10`)\n    const response = await fetch(`https://api.unsplash.com/photos?page=${page}&client_id=${accessKey}`)\n    const json = await response.json();\n    return json\n}","import React, { useState, useEffect } from 'react';\nimport { InfiniteLoader, List } from 'react-virtualized';\nimport './modal.css'\n\nfunction Modal(props) {\n    const { list, index, closeModal } = props\n    const [currentindex, setCurrentindex] = useState(index)\n    const [disabledRightArrow, setDisableRightArrow] = useState(false)\n    const [disabledleftArrow, setDisabledleftArrow] = useState(false)\n\n    useEffect(() => {\n        if (currentindex === list.length - 1) {\n            setDisabledleftArrow(false)\n            setDisableRightArrow(true)\n        }\n        if (currentindex === 0) {\n            setDisabledleftArrow(true)\n            setDisableRightArrow(false)\n        }\n\n        if (currentindex !== list.length - 1 && currentindex !== 0) {\n            setDisabledleftArrow(false)\n            setDisableRightArrow(false)\n        }\n    }, [currentindex, list])\n\n    const rightBtnHandler = () => {\n        setCurrentindex(currentindex => currentindex + 1)\n    }\n\n    const leftBtnHandler = () => {\n        setCurrentindex(currentindex => currentindex - 1)\n    }\n    function isRowLoaded({ index }) {\n        return !!list[index];\n    }\n\n    const rowRenderer = ({ key, index, style }) => {\n        return (<div key={key} className=\"modal-content\" >\n            <button disabled={disabledleftArrow} className=\"up-down\" onClick={leftBtnHandler}>&#8592;</button>\n            {list[currentindex].urls.small ?\n                <div className=\"pic-container\" style={{ textAlign: 'center' }}> <p>Picture: {currentindex + 1}</p>\n                    <img\n                        className=\"loaded-pic\"\n                        src={list[currentindex].urls.small}\n                        alt=\"picture\"\n                    // src={list[currentindex].thumbnailUrl}\n                    /> </div> : <p>Loading...</p>}\n            <button disabled={disabledRightArrow} className=\"up-down\" onClick={rightBtnHandler}>&#8594;</button>\n        </div>\n        )\n    }\n\n    const loadMoreRows = async ({ startIndex, stopIndex }) => { }\n\n    return (<>\n        <div id=\"modal-container\">\n            <div className=\"modal-background\">\n                <div className=\"modal\">\n                    <div className=\"close\">\n                        <h2>Total Pictures: {list.length}</h2>\n                        <button onClick={closeModal}>&#x292C;</button>\n                    </div>\n                    <InfiniteLoader\n                        isRowLoaded={isRowLoaded}\n                        loadMoreRows={loadMoreRows}\n                        rowCount={1}\n                    >\n                        {({ onRowsRendered, registerChild }) => (\n                            <List\n                                height={300}\n                                onRowsRendered={onRowsRendered}\n                                ref={registerChild}\n                                rowCount={1}\n                                rowHeight={250}\n                                rowRenderer={rowRenderer}\n                                width={375}\n                                style={{ margin: 'auto', }}\n                            />\n                        )}\n                    </InfiniteLoader>\n                </div>\n            </div>\n        </div >\n    </>\n    );\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport 'react-virtualized/styles.css'; // only needs to be imported once\nimport { photoGalleryService } from '../../services/photoGallery';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Modal from '../Modal';\n\nconst style = {\n    height: '20%',\n    border: \"1px solid\",\n    margin: 16,\n    padding: 16,\n    width: '20%',\n};\n\nconst container = {\n    padding: 16,\n    textAlign: 'center'\n}\n\n// This example assumes you have a way to know/load this information\nexport default function PhotoGallery() {\n    const [list, setList] = useState([]);\n    let [page, setPage] = useState(1)\n    const [isApiLoading, setIsApiLoading] = useState(false)\n    const [modalOpen, setOpenModal] = useState(false)\n    const [selectedIndex, setSelectedIndex] = useState(0)\n\n    useEffect(() => {\n        async function fetchData() {\n            const listdata = await photoGalleryService(1)\n            setList(listdata)\n            setIsApiLoading(false)\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        if (page > 1) {\n            async function fetchData() {\n                const listdata = await photoGalleryService(page)\n                setList([...list, ...listdata])\n                setIsApiLoading(false)\n            }\n            fetchData();\n        }\n    }, [page, list])\n\n    const handlescroll = () => {\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight && !isApiLoading) {\n            // you're at the bottom of the page\n            setIsApiLoading(true)\n            setPage(page => page + 1)\n        }\n    };\n\n    const openModalHandler = (ind) => {\n        setOpenModal(true)\n        setSelectedIndex(ind)\n    }\n\n    // Render your list\n    return (\n        <div style={container} className={`${modalOpen ? 'backdrop' : ''}`} id=\"photo-gallery\">\n            <h1>Photo Gallery: {list.length}</h1>\n            <InfiniteScroll\n                dataLength={list.length}\n                // next={loadMoreRows}\n                onScroll={handlescroll}\n                hasMore={true}\n                loader={<h4>Loading...</h4>}\n            >\n                {list.length !== 0 && list.map((item, i) =>\n                    <img\n                        key={`${item.id + 'test' + i}`}\n                        style={style}\n                        src={item.urls.small}\n                        alt=\"picture\"\n                        // src={item.thumbnailUrl}\n                        onClick={() => openModalHandler(i)}\n                    />\n                )}\n            </InfiniteScroll>\n            {modalOpen && <Modal list={list} index={selectedIndex} closeModal={() => setOpenModal(false)} />}\n        </div>\n    );\n}","import './App.css';\nimport PhotoGallery from './components/PhotoGallery';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <PhotoGallery />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}